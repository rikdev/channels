version: '{build}'

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
      CXX_STANDARD: 14
      CXX: clang++-8
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
      CXX_STANDARD: 14
      CXX: g++-9
      CXXFLAGS: -fconcepts
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CXX_STANDARD: 14
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
      CXX_STANDARD: 17
      CXX: clang++-8
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
      CXX_STANDARD: 17
      CXX: g++-9
      CXXFLAGS: -fconcepts
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CXX_STANDARD: 17
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
      CXX_STANDARD: 20
      CXX: clang++-8
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
      CXX_STANDARD: 20
      CXX: g++-9
      CXXFLAGS: -fconcepts
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CXX_STANDARD: 20

cache:
  - build_tools

install:
  - sh: |
      if [[ "${CXX}" == 'clang++-8' ]]; then
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main'
        sudo apt-get install -y clang++-8 clang-tidy-8
      fi

  - ps: |
      $build_tools_path = "$env:APPVEYOR_BUILD_FOLDER/build_tools"
      New-Item -Force -Path "$build_tools_path" -ItemType Directory
      Set-Location "$build_tools_path"

      if (Test-Path vcpkg) {
          Set-Location vcpkg
          git pull --quiet
      } else {
          git clone --quiet --depth 1 'https://github.com/microsoft/vcpkg.git'
          Set-Location vcpkg
      }

  - sh: |
      ./bootstrap-vcpkg.sh
      ./vcpkg install catch2:x64-linux

  - cmd: |
      bootstrap-vcpkg.bat
      vcpkg install catch2:x64-windows

configuration:
  - Release

build_script:
  - ps: |
      Set-Location "$env:APPVEYOR_BUILD_FOLDER"
      New-Item -Path build -ItemType Directory
      Set-Location build
      # build
      cmake .. `
        -DCMAKE_TOOLCHAIN_FILE="$build_tools_path/vcpkg/scripts/buildsystems/vcpkg.cmake" `
        -DBUILD_TESTING=ON `
        -DCHANNELS_BUILD_EXAMPLES=ON `
        -DCMAKE_CXX_STANDARD="$env:CXX_STANDARD" `
        -DCMAKE_BUILD_TYPE="$env:CONFIGURATION"
      cmake --build . --config "$env:CONFIGURATION"

test_script:
  - ps: ctest --build-config "$env:CONFIGURATION"
